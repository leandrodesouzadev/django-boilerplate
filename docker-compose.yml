version: "3.3"
services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.http.address=:80"
      - "--global.sendAnonymousUsage=false"
    ports:
      - "80:80"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  api:
    container_name: "${HOST}"
    build: .
    command: python manage.py runserver 0.0.0.0:80
    volumes:
      - .:/app/
      - .:/project/logs/
    ports:
      - 80
    env_file:
      - .env.dev

    labels:
      traefik.enable: true
      traefik.http.routers.api.rule: Host(`${HOST}`)
      traefik.http.routers.api.entrypoints: http
    depends_on:
      - db
      - traefik
    

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

volumes:
  postgres_data:
  logs:
